syntax = "proto3";

package customer.api;

import "google/protobuf/empty.proto";
import "kalix/annotations.proto";

message Customer {
  string customer_id = 1 [(kalix.field).id = true];
  string email = 2;
  string name = 3;
  Address address = 4;
}

message Address {
  string street = 1;
  string city = 2;
}

message GetCustomerRequest {
  string customer_id = 1 [(kalix.field).id = true];
  string token = 2;
}

message ChangeNameRequest {
  string customer_id = 1 [(kalix.field).id = true];
  string new_name = 2;
  string token = 3;
}

message ChangeAddressRequest {
  string customer_id = 1 [(kalix.field).id = true];
  Address new_address = 2;
  string token = 3;
}

message CreateCustomerResponse {
  string token = 1;
}

service CustomerService {
  option (kalix.codegen) = {
    value_entity: {
      name: "customer.domain.Customer"
      type_id: "customers"
      state: "customer.domain.CustomerState"
    }
  };

  option (kalix.service).acl.allow = { principal: ALL };

  rpc Create(Customer) returns (CreateCustomerResponse) {}

  rpc GetCustomer(GetCustomerRequest) returns (Customer) {
    option (kalix.method).jwt = { validate: BEARER_TOKEN };
  }

  rpc ChangeName(ChangeNameRequest) returns (google.protobuf.Empty) {
    option (kalix.method).jwt = { validate: BEARER_TOKEN };
  }

  rpc ChangeAddress(ChangeAddressRequest) returns (google.protobuf.Empty) {
    option (kalix.method).jwt = { validate: BEARER_TOKEN };
  }
}

