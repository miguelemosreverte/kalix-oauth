// Copyright 2021-2023 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package customer.api;

import "google/protobuf/empty.proto";
import "kalix/annotations.proto";

message Customer {
  string customer_id = 1 [(kalix.field).entity_key = true];
  string email = 2;
  string name = 3;
  Address address = 4;
}

message Address {
  string street = 1;
  string city = 2;
}

message GetCustomerRequest {
  string customer_id = 1 [(kalix.field).entity_key = true];
}

message ChangeNameRequest {
  string customer_id = 1 [(kalix.field).entity_key = true];
  string new_name = 2;
}

message ChangeAddressRequest {
  string customer_id = 1 [(kalix.field).entity_key = true];
  Address new_address = 2;
}

service CustomerService {
  option (kalix.codegen) = {
    value_entity: {
      name: "customer.domain.Customer"
      entity_type: "customers"
      state: "customer.domain.CustomerState"
    }
  };
  option (kalix.service).acl.allow = { principal: ALL };

  rpc Create(Customer) returns (google.protobuf.Empty) {}
  rpc GetCustomer(GetCustomerRequest) returns (Customer) {}
  rpc ChangeName(ChangeNameRequest) returns (google.protobuf.Empty) {}
  rpc ChangeAddress(ChangeAddressRequest) returns (google.protobuf.Empty) {}
}
