// Copyright 2021 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// tag::declarations[]
syntax = "proto3";

package customer.view;

import "customer/domain/customer_domain.proto";
import "kalix/annotations.proto";

// end::declarations[]
// tag::name[]
service CustomerByName {
  option (kalix.codegen) = {
    view: {}
  };
  // end::name[]
  option (kalix.service).acl.allow = { principal: ALL };
  // tag::name[]

  rpc UpdateCustomer(domain.CustomerState) returns (domain.CustomerState) {
    option (kalix.method).eventing.in = {
      value_entity: "customers"
    };
    option (kalix.method).view.update = {
      table: "customers"
    };
  }

  rpc GetCustomers(ByNameRequest) returns (stream domain.CustomerState) {
    option (kalix.method).view.query = {
      query: "SELECT * FROM customers WHERE name = :customer_name"
    };
  }
}

message ByNameRequest {
  string customer_name = 1;
}

// end::name[]
// tag::email[]
service CustomerByEmail {
  option (kalix.codegen) = {
    view: {}
  };
  // end::email[]
  option (kalix.service).acl.allow = { principal: ALL };
  // tag::email[]

  rpc UpdateCustomer(domain.CustomerState) returns (domain.CustomerState) {
    option (kalix.method).eventing.in = {
      value_entity: "customers"
    };
    option (kalix.method).view.update = {
      table: "customers"
    };
  }

  rpc GetCustomer(ByEmailRequest) returns (domain.CustomerState) {
    option (kalix.method).view.query = {
      query: "SELECT * FROM customers WHERE email = :email"
    };
  }
}

message ByEmailRequest {
  string email = 1;
}
// end::email[]
